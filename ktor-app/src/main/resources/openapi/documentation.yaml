openapi: "3.1.0"
info:
  title: "nektarapp API"
  description: "nektarapp API"
  version: "1.0.0"
servers:
- url: "https://nektarapp"
paths:
  /:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Hello, world!"
  /user/{email}:
    get:
      description: ""
      parameters:
      - name: "email"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: "Not Found"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "User not found"
        "400":
          description: "Bad Request"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Missing or malformed email"
  /userDelete/{email}:
    delete:
      description: ""
      parameters:
      - name: "email"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "User deleted successfully"
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SimpleResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    success: false
                    message: "Something went wrong"
                Example#2:
                  description: ""
                  value:
                    success: false
                    message: "Something went wrong"
  /v1/reviews/addReview:
    post:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReviewRequest"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SimpleResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    success: false
                    message: "Missing some fields"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SimpleResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    success: true
                    message: "Review added"
        "409":
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SimpleResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    success: false
                    message: "null"
  /v1/reviews/deleteReview:
    delete:
      description: ""
      parameters:
      - name: "email"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "movieid"
        in: "query"
        required: false
        schema:
          type: "integer"
      - name: "star"
        in: "query"
        required: false
        schema:
          type: "integer"
      - name: "text"
        in: "query"
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Review deleted successfully"
        "404":
          description: "Not Found"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Review not found"
        "400":
          description: "Bad Request"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Missing or malformed parameters"
  /v1/reviews/getReviews/{email}:
    get:
      description: ""
      parameters:
      - name: "email"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Review"
        "404":
          description: "Not Found"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Review n√£o encontrada"
        "400":
          description: "Bad Request"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Missing or malformed email"
  /v1/users/addFavorite:
    post:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FavoritesRequest"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SimpleResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    success: false
                    message: "Something went wrong"
                Example#2:
                  description: ""
                  value:
                    success: false
                    message: "Missing some fields"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SimpleResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    success: true
                    message: "Wrong email"
                Example#2:
                  description: ""
                  value:
                    success: true
                    message: "Favorite added"
  /v1/users/login:
    post:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SimpleResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    success: false
                    message: "Wrong password"
                Example#2:
                  description: ""
                  value:
                    success: false
                    message: "Wrong email"
                Example#3:
                  description: ""
                  value:
                    success: false
                    message: "Missing some fields"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SimpleResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    success: true
                    message: "null"
        "409":
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SimpleResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    success: false
                    message: "null"
  /v1/users/register:
    post:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SimpleResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    success: false
                    message: "Missing some fields"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SimpleResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    success: true
                    message: "null"
        "409":
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SimpleResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    success: false
                    message: "null"
components:
  schemas:
    User:
      type: "object"
      properties:
        email:
          type: "string"
        hashPassword:
          type: "string"
        name:
          type: "string"
        favorites:
          type: "array"
          items:
            type: "integer"
            format: "int32"
      required:
      - "email"
      - "hashPassword"
      - "name"
      - "favorites"
    SimpleResponse:
      type: "object"
      properties:
        success:
          type: "boolean"
        message:
          type: "string"
      required:
      - "message"
    ReviewRequest:
      type: "object"
      properties:
        email:
          type: "string"
        movieid:
          type: "integer"
          format: "int32"
        star:
          type: "integer"
          format: "int32"
        text:
          type: "string"
      required:
      - "email"
      - "text"
    Review:
      type: "object"
      properties:
        email:
          type: "string"
        movieid:
          type: "integer"
          format: "int32"
        star:
          type: "integer"
          format: "int32"
        text:
          type: "string"
      required:
      - "email"
      - "text"
    FavoritesRequest:
      type: "object"
      properties:
        email:
          type: "string"
        id:
          type: "integer"
          format: "int32"
      required:
      - "email"
    LoginRequest:
      type: "object"
      properties:
        email:
          type: "string"
        password:
          type: "string"
      required:
      - "email"
      - "password"
    RegisterRequest:
      type: "object"
      properties:
        email:
          type: "string"
        password:
          type: "string"
        name:
          type: "string"
      required:
      - "email"
      - "password"
      - "name"